from netCDF4 import Dataset
import numpy as np
from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt

### Data
data = Dataset('./Data/LS8/L8_OLI_2018_09_03_18_56_01_046029_L2W.nc')
lon = np.asarray(data['lon'])
lat = np.asarray(data['lat'])
col = np.asarray(data['rhorc_655'])
Col = np.zeros(col.shape)
Lon = np.zeros(col.shape)
Lat = np.zeros(col.shape)
for i in np.arange(0,col.shape[0]):
    for j in np.arange(0,col.shape[1]):
        Col[i,j] = np.float(col[i,j])
        Lon[i,j] = np.float(lon[i,j])
        Lat[i,j] = np.float(lat[i,j])

### 
plt.figure(figsize=[9,7])
plt.pcolormesh(Lon,Lat,Col,cmap="rainbow")
plt.colorbar()
plt.clim([0,0.1])
plt.xlabel('Longitude')
plt.ylabel('Latitude')
plt.title("L8 09/03/2018")
plt.tight_layout()
plt.savefig("./Figs/Fig_map_raw655.png",dpi=600)


#plt.figure(figsize=[9,7])
#plt.pcolormesh(Lon,Lat,Col,cmap="rainbow")
#plt.colorbar()
#plt.clim([0,0.012])
#plt.xlabel('Longitude')
#plt.ylabel('Latitude')
#plt.title("L8 09/03/2018")
#plt.tight_layout()
#plt.savefig("./Figs/Fig_map_lake655.png",dpi=600)

## Get locations to interp to
#plt.ginput(100,timeout=-1,show_clicks=True)

## These are the locations:
LOCS = np.asarray([(-122.24808902707743, 44.71963747927097),
 (-122.24590048514438, 44.717862996037155),
 (-122.24453264643623, 44.71554251796217),
 (-122.24234410450318, 44.713222039887185),
 (-122.24070269805338, 44.7107650631019),
 (-122.23878772386198, 44.70789859018574),
 (-122.23796702063707, 44.70557811211076),
 (-122.23659918192892, 44.702575140484306),
 (-122.23441063999587, 44.699708667568146),
 (-122.2311278270963, 44.698480179175505),
 (-122.22784501419673, 44.696842194651985),
 (-122.22319436258901, 44.695340708838756),
 (-122.21936441420617, 44.69438521786671),
 (-122.21361949163193, 44.69465821528729),
 (-122.20842170454094, 44.695204210128466),
 (-122.20349748519158, 44.69711519207257),
 (-122.19884683358386, 44.69943567014756),
 (-122.19474331745938, 44.701346652091665),
 (-122.19063980133492, 44.704076626297535),
 (-122.18790412391861, 44.70653360308281),
 (-122.1851684465023, 44.70940007599897),
 (-122.18462131101904, 44.71213005020484),
 (-122.18380060779415, 44.714723525700414),
 (-122.1832534723109, 44.71718050248569),
 (-122.18051779489458, 44.72004697540185),
 (-122.17641427877011, 44.722367453476835),
 (-122.17203719490402, 44.72441493413124),
 (-122.1701222207126, 44.72618941736505),
 (-122.16629227232977, 44.727963900598866),
 (-122.16273589168857, 44.73219536061796),
 (-122.17969709166968, 44.71008256955044),
 (-122.17559357554522, 44.711584055363666),
 (-122.17066935619587, 44.713222039887185),
 (-122.16465086587999, 44.714860024410704),
 (-122.16027378201389, 44.716498008934224),
 (-122.15726453685595, 44.71868198829892),
 (-122.15480242718127, 44.721138965084194),
 (-122.15288745298986, 44.723595941869476),
 (-122.14987820783192, 44.72537042510329),
 (-122.14413328525767, 44.72618941736505),
 (-122.20650673034952, 44.69302023076377),
 (-122.205412459383, 44.691109248819664),
 (-122.20349748519158, 44.689334765585855),
 (-122.2018560787418, 44.68796977848292),
 (-122.19966753680875, 44.686468292669694),
 (-122.24124983353666, 44.70080065725049),
 (-122.24371194321132, 44.69888967530638),
 (-122.24672118836926, 44.69711519207257),
 (-122.25055113675211, 44.695204210128466),
 (-122.19200764004307, 44.70830808631663),
 (-122.18270633682762, 44.70544161340047),
 (-122.19802613035895, 44.69725169078286),
 (-122.20814813679931, 44.69779768562404)])


## Save 
np.savez("./Data/Data_lake_locations.npz",LOCS=LOCS)
